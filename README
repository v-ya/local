自用项目，为了查找方便还是放个简介吧。
英文机翻，不保证时效性。

所有主要依赖可以看 Makefile 里的 LDFLAGS，大多数没啥问题。
基本上大多都只能在 GNU/Linux 系统下使用 gcc 编译执行，没做移植。
很多子项目只写了一半丢那了。

For personal use projects, let's put a brief introduction for the convenience of searching.
English machine translation, timeliness is not guaranteed.

All major dependencies can be seen in LDFLAGS in Makefile, most of them are fine.
Basically, most of them can only be compiled and executed with gcc under the GNU/Linux system, without transplantation.
Many sub-items are only half written and thrown away.

* args
	命令行解析，方便自用，后面基本上不会维护了。
	Command line analysis is convenient for self-use, and basically will not be maintained later.

* atlayer
	打算做语法树分析的，目前弃坑。
	Those who intend to do syntax tree analysis are currently abandoning the pit.

* audioloop
	声音循环播放，大概？
	The sound loops, presumably?

* av1
	打算编解码 av1，弃坑。
	Intend to codec av1, abandon the pit.

* bmp
	临时用用的 bmp 保存工具，不维护，之后可能会删除。
	Temporary bmp storage tool, not maintained, may be deleted later.

* chord
	声音生成基础库，最近不怎么搞。
	The basic library for sound generation has not been done much recently.

* cmath
	数学工具库？之后可能会完善吧，大概。
	Math Toolkit? It might be perfected later, probably.

* console
	控制台交互库，类似一个简单的 shell 界面。
	Console interaction library, similar to a simple shell interface.

* cparse
	C 语言文件解析，之前有作为代码自动生成工具用。
	C language file analysis, previously used as a code automatic generation tool.

* dsink
	不好形容，大致想做音视频压缩，不过效果不好，放弃状态。类似于二值化 Fourier 变换？
	It's hard to describe, I basically want to do audio and video compression, but the effect is not good, so I give up the state. Similar to Binarized Fourier Transform?

* dylink
	把 gcc 生成的 ELF 格式的 .o 文件抽离符号和数据，生成类似于动态链接库的东西。
	Extract symbols and data from the .o file in ELF format generated by gcc, and generate something similar to a dynamic link library.

* elfin
	解析 ELF 格式。
	Parse ELF format.

* exbuffer
	可扩展缓冲区，整个项目里的基础性依赖。
	Scalable buffer, the basic dependency in the whole project.

* fsys
	常用的文件交互库。
	Commonly used file interaction library.

* graph
	vulkan 部分接口套壳，之后可能会弃用，大概。
	vulkan part of the interface shell, which may be deprecated later, presumably.

* hashmap
	hashmap，整个项目里的基础性依赖。
	hashmap, the basic dependency in the whole project.

* image-view
	图片预览工具，可能算是这里面唯一有一点实用价值的东西了。
	可以图片旋转、缩放、去标题框，具体可以看 help 或 image-view/args.c。
	当时为了绘画方便看参考图写的。
	The image preview tool may be the only thing with a little practical value in it.
	The image can be rotated, zoomed, and the title box can be removed. For details, see help or image-view/args.c.
	At that time, it was written for the convenience of drawing to see the reference picture.

* iusb
	usb 通讯，只实现了部分功能。
	usb communication, only part of the functions are realized.

* iyaa
	当初可能是为了做图形交互界面弄的，废弃状态，未来大概率会删除。
	It may have been made for a graphical interface at the beginning, and it is in an abandoned state, and it will most likely be deleted in the future.

* jpeginfo
	打印 jpeg 的文件结构，不完整，为了写 jpeg 编解码的测试程序。
	Print jpeg file structure, incomplete, in order to write jpeg codec test program.

* json
	json 解析构建，凑活着用。
	JSON parsing and construction, barely use of it.

* kiiyaa
	kiya 的相关程序。
	Kiya related programs.

* kiya
	动态加载执行的程序平台？依赖 dylink 和 pocket。
	Program platform for dynamic loading and execution? Rely on dylink and pocket.

* kiya-source-builder
	kiya 的资源库构建程序。
	A repository builder for kiya.

* largeN
	大数运算，废弃，应该会挪到 cmath 里。
	Large number operations, discarded, should be moved to cmath.

* matrix
	矩阵运算，半废弃，应该会挪到 cmath 里。
	Matrix operations, semi-abandoned, should be moved to cmath.

* media
	媒体资源解析构建，预计会处理 图片、声音、视频？、压缩文档。未来可能会加一些随便搞的奇怪编码格式。
	Analysis and construction of media resources, is it expected to process pictures, sounds, and videos? , Compress the document. In the future, some casual and strange encoding formats may be added.

* mlog
	日志重定向输出，大概。
	Log redirection output, presumably.

* mp4hi
	打印 mp4 文件结构。
	Print the mp4 file structure.

* mpeg4
	解析构建 mp4 文件结构。
	Parses and builds the mp4 file structure.

* mtask
	管线式并行计算。
	Pipelined parallel computing.

* multicalc
	并行计算，废弃，未来删除，mtask 的前身。
	Parallel computing, obsolete, future delete, predecessor of mtask.

* note
	音符生成，未来可能会把功能挪到 chord 里。
	Note generation, the function may be moved to chord in the future.

* otfont
	字体解析（可能会生成？），目前弃坑。
	Font parsing (maybe generated?), currently abandoned.

* pcm2wav
	pcm 转 wav。
	pcm to wav.

* pcmplay
	播放声音的库，不怎么维护，未来可能会新开别的。
	The library for playing sounds is not well maintained, and others may be opened in the future.

* phloop
	phoneme 脚本生成的声音循环播放，当时为了方便边写脚本变听声音，不过不怎么好用。
	The sound generated by the phoneme script is played in a loop. At that time, it was convenient to write the script to change the sound, but it was not very easy to use.

* phoneme
	根据脚本生成声音。
	基于类周期波模型，问题很大，对元音的模拟还好，但辅音、噪音、摩擦音不太好处理。
	而且对类周期波的相位问题相当不好搞。
	之后应该不会维护了，未来大概会重新设计一个。
	Generate sounds from scripts.
	Based on the quasi-periodic wave model, the problem is very big. The simulation of vowels is okay, but the consonants, noise, and fricatives are not easy to deal with.
	And it is quite difficult to deal with the phase problem of quasi-periodic waves.
	It should not be maintained in the future, and it will probably be redesigned in the future.

* pocket
	资源打包。
	Resource packaging.

* pocket-builder
	pocket 生成脚本。
	pocket generation script.

* posky
	消息邮递系统。
	Message delivery system.

* queue
	队列，目前只有环形无锁队列，整个项目里的基础性依赖。
	Queue, currently there is only a ring lock-free queue, which is the basic dependency of the entire project.

* random
	随机数生成，瞎搞的生成序列，没啥理论依据。
	Random number generation, messy generated sequence, no theoretical basis.

* rbtree
	红黑树，整个项目里的基础性依赖。
	Red-black tree, the basic dependency in the whole project.

* refer
	结构化引用，整个项目里的基础性依赖。
	可以认为是带引用计数和析构函数的 malloc()。
	Structured references, basic dependencies in the entire project.
	Think of it as malloc() with reference counting and destructor.

* rhash
	求散列的小工具，用的 random 生成的随机数列算的，没理论依据。
	The small tool for hashing is calculated with the random number sequence generated by random, and has no theoretical basis.

* scatterplot
	画散点图？之前分析声音时弄的，未来不会维护了估计，但可能会开新的。
	Draw a scatterplot? It was made when analyzing the sound before, and the estimate will not be maintained in the future, but a new one may be opened.

* tparse
	文本解析库，大致用来解析程序语言和脚本的。
	Text parsing library, roughly used to parse programming languages and scripts.

* transport
	网络底层协议封装，TCP/UDP 之类的。
	Network underlying protocol encapsulation, such as TCP/UDP.

* udns
	dns 报文解析生成。
	dns packet parsing and generation.

* uhttp
	http1.1 报文解析生成。
	HTTP1.1 packet parsing and generation.

* vattr
	有序复合键值对容器，整个项目里的基础性依赖。
	An ordered composite key-value pair container, the basic dependency in the entire project.

* vkaa
	一个脚本解释器，功能相当残缺，只能单线程跑。
	未来可能会用到游戏或 2D/3D 渲染里。
	A script interpreter is quite incomplete and can only run in a single thread.
	It may be used in games or 2D/3D rendering in the future.

* wav
	临时用用的 wav 加载保存工具，不维护，之后可能会删除。
	The temporary wav loading and saving tool is not maintained and may be deleted later.

* wavelike
	类周期波分析工具，随手写的，不维护，之后可能会删除。
	A periodic wave analysis tool, scribbled written, not maintained, and may be deleted later.

* web
	http1.1 请求、服务端框架、dns 查询(TCP)。
	目前不支持 https。
	http1.1 request, server frame, dns query (TCP).
	https is not currently supported.

* wldeal
	类周期波分析工具，随手写的，不维护，之后可能会删除。
	A periodic wave analysis tool, scribbled written, not maintained, and may be deleted later.

* xwindow
	对 xcb 封装的图形库。
	Graphics library wrapped around xcb.

* yaw
	线程库，锁、信号之类的。
	Thread library, locks, signals and the like.

* zlist
	带索引树的有序链表，不知道应该叫啥。
	主要为了方便快速插入删除、根据整型值定位节点和节点段。
	未来可能会用在根据 2D/3D 坐标快速查找上。
	An ordered linked list with an index tree, I don't know what it should be called.
	Mainly for the convenience of fast insertion and deletion, positioning nodes and node segments according to integer values.
	In the future, it may be used for quick lookup based on 2D/3D coordinates.

有些名称起得奇怪可能是因为在凑 26 个英文字母开头，或者是一些表达当时感想的拟声词，没啥特别的意思。
Some of the strange names may be to collect the beginning of 26 English letters, or some onomatopoeia expressing the feelings at the time, which have no special meaning.
